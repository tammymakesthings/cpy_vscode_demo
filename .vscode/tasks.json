{
    //////////////////////////////////////////////////////////////////////////
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    //////////////////////////////////////////////////////////////////////////
    // TLC NOTES:
    //
    // - I use poetry to manage my Python virtualenv environments. If you're
    //   not doing that, you can remove the "poetry run" from all of the
    //   commands.
    //
    // - If you're running on macOS or Linux, you could create a
    //   'requirements-device.txt' file with the libraries needed on the
    //   device, and then change the install command to run something like
    //   this:
    //
    //       "command": "poetry run discotool install $(cat requirements-device.txt) && poetry run discotool cleanup --all"
    //////////////////////////////////////////////////////////////////////////
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Maintenance: run Black formatter on code.py file",
            "type": "shell",
            "command": "poetry run black code.py",
            "problemMatcher": [],
        },
        {
            "label": "Maintenance: run pylint on code.py file",
            "type": "shell",
            "command": "poetry run pylint code.py",
            "problemMatcher": [],
        },
        {
            "label": "CPY: Copy code.py to CircuitPython Device",
            "type": "shell",
            "osx": {
                "command": "cp ${workspaceFolder}/code.py /Volumes/CIRCUITPY"
            },
            "linux": {
                "command": "cp ${workspaceFolder}/code.py /media/CIRCUITPY"
            },
            "windows": {
                // Change this to match the CPY device drive letter
                "command": "copy ${workspaceFolder}\\code.py e:\\"
            },
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "CPY: circup: Install libraries",
            "type": "shell",
            "command": "poetry run discotool install neopixel adafruit_lis3dh adafruit_display_text adafruit_display_shapes adafruit_bus_device adafruit_pybadger",
            "osx": {
                "command": "poetry run discotool install neopixel adafruit_lis3dh adafruit_display_text adafruit_display_shapes adafruit_bus_device adafruit_pybadger && poetry run discotool cleanup --all"
            },
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "label": "CPY: circup: update libraries",
            "type": "shell",
            "command": "poetry run discotool update",
            "osx": {
                "command": "poetry run discotool update --all && poetry run discotool cleanup --all"
            },
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "label": "CPY: discotool: Serial console",
            "type": "shell",
            "command": "poetry run discotool repl",
            "problemMatcher": [],
            "group": {
                "kind": "test",
                "isDefault": true
            }
        }
    ]
}
